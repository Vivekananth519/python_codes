import numpy as np
import pandas as pd

np.random.seed(42)

N = 10000

cont_dict = {'Variable': {0: 'AGE',
  1: 'AQB_BALANCE',
  2: 'AUM',
  3: 'CIBIL_SCORE',
  4: 'CREDIT_CARD_LIMIT',
  5: 'CR_AMT_12MNTH',
  6: 'CR_CNT_12MNTH',
  7: 'DC_APPAREL_30DAYS_ACTV',
  8: 'DC_ECOM_30DAYS_AMT',
  9: 'DC_ECOM_30DAYS_CNT',
  10: 'DC_FOOD_30DAYS_ACTV',
  11: 'DC_FUEL_30DAYS_ACTV',
  12: 'DC_GROCRY_30DAYS_ACTV',
  13: 'DC_OTT_30DAYS_ACTV',
  14: 'DC_POS_30DAYS_AMT',
  15: 'DC_POS_30DAYS_CNT',
  16: 'DC_RECHARGE_30DAYS_ACTV',
  17: 'DC_TRAVEL_30DAYS_ACTV',
  18: 'DC_UTILITY_30DAYS_ACTV',
  19: 'DR_AMT_12MNTH',
  20: 'DR_CNT_12MNTH',
  21: 'DR_CR_RATIO',
  22: 'FD_COUNT',
  23: 'FD_CURRENTMONTHANR',
  24: 'FD_FLAG',
  25: 'GI_FLAG',
  26: 'HEALTH_FLAG',
  27: 'INCOME_NET',
  28: 'KYC_LAST_DONE_DATE',
  29: 'LI_FLAG',
  30: 'MASS_FLAG',
  31: 'MBK_ACTIVE',
  32: 'MF_FLAG',
  33: 'MONTHLY_BALANCE',
  34: 'NRV',
  35: 'NR_FLAG',
  36: 'TOTAL_LIVE_SECURED_AMT',
  37: 'TOTAL_LIVE_UNSECURED_AMT',
  38: 'VINTAGE_DAYS'},
 'Mean': {0: 45.75,
  1: 335324.5275,
  2: 1482679.66,
  3: 729.25,
  4: 432750.0,
  5: 4427092.8125,
  6: 390.0,
  7: 0.0,
  8: 747.54,
  9: 0.5,
  10: 0.0,
  11: 0.25,
  12: 0.25,
  13: 0.0,
  14: 1250.0,
  15: 0.75,
  16: 0.0,
  17: 0.0,
  18: 0.0,
  19: 4400780.205,
  20: 755.25,
  21: 18.4664255,
  22: 2.25,
  23: 818797.965,
  24: 0.5,
  25: 0.25,
  26: 0.0,
  27: 637578.845,
  28: 22694.0,
  29: 0.25,
  30: 1.0,
  31: 0.5,
  32: 0.25,
  33: 285443.28500000003,
  34: 1427096.995,
  35: 0.25,
  36: 8043387.25,
  37: 1626783.5,
  38: 2472.25},
 'Std Dev': {0: 13.2034277,
  1: 40797470.12,
  2: 31660895.68,
  3: 145.8168632,
  4: 227937.36,
  5: 160056333.0,
  6: 405.0004491,
  7: 0.0778686,
  8: 55320.12,
  9: 1.1421999,
  10: 0.0979862,
  11: 0.1093538,
  12: 0.1182655,
  13: 0.081972,
  14: 6117.33,
  15: 1.1075376,
  16: 0.0678652,
  17: 0.0594367,
  18: 0.0595447,
  19: 163060150.0,
  20: 435.6866233,
  21: 249.0156422,
  22: 1.8768659,
  23: 2177717.88,
  24: 0.3077795,
  25: 0.1006145,
  26: 0.0901247,
  27: 272956.6,
  28: 786.2686886,
  29: 0.1785988,
  30: 0.1920778,
  31: 0.4817677,
  32: 0.1128338,
  33: 39394146.0,
  34: 31877424.32,
  35: 0.1684775,
  36: 24655099.6,
  37: 3300140.98,
  38: 1216.33}}

data_summary = pd.DataFrame(cont_dict)

df_cont = []

for idx, row in data_summary.iterrows():
    sample = np.random.normal(loc = row['Mean'], scale = row['Std Dev'],size = N)
    col_name = row['Variable']
    sample_data = pd.DataFrame({col_name: sample})
    df_cont.append(sample_data)

data_cont = pd.concat(df_cont,axis = 1)

#For Categorical values
cat_variables = {
    'ACCOUNT_TYPE'           : ['SAVINGS','CURRENT'],
    'CUSTOMER_TAG'           : ['RETAIL','INSTITUTIONAL'],
    'EDUCATION_LEVEL'        : ['Below 10th','UG','Graduate','PG'],
    'GENDER'                 : ['MALE','FEMALE'],
    'INTERNET_BANKING_USAGE' : ['Y','N'],
    'MARITAL_STATUS'         : ['Married','Single/Unmarried','Divorced/Separated'],
    'NOMINEE_AVAILABLE_FLAG' : ['Y','N'],
    'RM_ALLOCATED_FLAG'      : ['Y','N'],
    'OCCUPATION'             : ['SELF EMPLOYED','SALARIED','BUSINESS OWNER','NON-EARNER'],
    'STATE'                  :
     [
'Maharashtra',
'Gujarat',
'West Bengal',
'Uttar Pradesh',
'Tamil Nadu',
'Haryana',
'Rajasthan',
'Punjab',
'Delhi',
'Madhya Pradesh',
'Out of India',
'Andhra Pradesh',
'Karnataka',
'Telangana',
'Odisha',
'Kerala',
'Bihar',
'Assam',
'Chhattisgarh',
'Jharkhand',
'Uttarakhand',
'Himachal Pradesh',
'Jammu and Kashmir',
'Chandigarh',
'Goa',
'Manipur',
'Nagaland',
'Tripura',
'Puducherry',
'Dadra and Nagar Haveli and Daman and Diu',
'Sikkim',
'Arunachal Pradesh',
'Meghalaya',
'Mizoram',
'Andaman and Nicobar'
]
}

prob = {    
    'ACCOUNT_TYPE'           : [0.80,0.20],
    'CUSTOMER_TAG'           : [0.5,0.5],
    'EDUCATION_LEVEL'        : [0.25,0.25,0.25,0.25],
    'GENDER'                 : [0.6,0.4],
    'INTERNET_BANKING_USAGE' : [0.4,0.6],
    'MARITAL_STATUS'         : [0.6,0.35,0.05],
    'NOMINEE_AVAILABLE_FLAG' : [0.95,0.05],
    'RM_ALLOCATED_FLAG'      : [0.98,0.02],
    'OCCUPATION'             : [0.404,0.339,0.152,0.105],
    'STATE'                  : [
0.119496018,
0.089888389,
0.07827775,
0.072670547,
0.064865747,
0.062475027,
0.050854399,
0.049988679,
0.046685624,
0.043482459,
0.036553368,
0.033316907,
0.03284409,
0.031895128,
0.030473349,
0.029424496,
0.028928372,
0.020664074,
0.018809435,
0.015855997,
0.007232093,
0.006562825,
0.005510642,
0.005430729,
0.005330838,
0.00238739,
0.001664846,
0.001534988,
0.001481713,
0.001328547,
0.001288591,
0.001175382,
0.00107882,
0.000526091,
1.66485E-05
    ]
}

data_categorical = {}

for variable, catg in cat_variables.items():
    data_categorical[variable] = np.random.choice(catg,N,p = prob[variable])

data_cat = pd.DataFrame(data_categorical)
data = data_cat.reset_index()
data.rename(columns={'index':'ACCOUNT_NO'}, inplace = True)

data_final = pd.concat([data, data_cont], axis = 1)
